b#include <iostream>
#include <SDL.h>
#include "engine/engine.h"
#include "cmath"

#include "engine/particle_system/particle_system.h"

int main(int argc, char** argv) {
    srand(time(NULL));
    auto engine = Engine("Engine [core]", 1280, 720, 60);
    engine.SetClearColor({43, 42, 51});

    SDL_Texture* particle_texture = engine.NewTexture("C:\\dev\\GameEngine\\image\\Sprite-0001.png")->GetSDLTexture();
    Particle particle(
            particle_texture,
            {1280/2-8, -30},
            {0, 5},
            {0, 0.02},
            {0, 0},
            {0xF7, 0xF7, 0xF7, 0xFF},
            0,
            150,
            10000,
            1
            );


    unsigned x = 0;
    double elapsed_time = 0;
    bool should_quit = false;
    while (!should_quit) {
        engine.LoopBegin();

        SDL_Event event;
        while (SDL_PollEvent(&event)) {
            switch (event.type) {
                case SDL_QUIT:
                    should_quit = true;
                    break;
            }
            break;
        }

        engine.RenderBegin();

        engine.Print("Particles testing", 16, 0, 32);

        //particle.velocity.x = cos(x * (std::numbers::pi / 180)) ;
        //particle.velocity.y = sin(x * (std::numbers::pi / 180)) * 5;

        particle.Update(
                engine.R(),
                {1280/2 + 16, 0},
                {0, 0},
                {0, 0},
                {0, 0},
                0
                );



        engine.RenderEnd();
        x++;
        engine.LoopEnd();
    }

    engine.Close();
    return 0;
}
